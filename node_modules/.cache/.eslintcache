[{"/Users/jeffplatt/Flatiron/code/DogGO/doggo-frontend/src/index.js":"1","/Users/jeffplatt/Flatiron/code/DogGO/doggo-frontend/src/reportWebVitals.js":"2","/Users/jeffplatt/Flatiron/code/DogGO/doggo-frontend/src/App.js":"3","/Users/jeffplatt/Flatiron/code/DogGO/doggo-frontend/src/Header.js":"4","/Users/jeffplatt/Flatiron/code/DogGO/doggo-frontend/src/Feed.js":"5","/Users/jeffplatt/Flatiron/code/DogGO/doggo-frontend/src/NewPostForm.js":"6","/Users/jeffplatt/Flatiron/code/DogGO/doggo-frontend/src/PostContainer.js":"7","/Users/jeffplatt/Flatiron/code/DogGO/doggo-frontend/src/OnePost.js":"8"},{"size":500,"mtime":1619029346433,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1619021635275,"results":"11","hashOfConfig":"10"},{"size":347,"mtime":1619095865585,"results":"12","hashOfConfig":"10"},{"size":300,"mtime":1619040093732,"results":"13","hashOfConfig":"10"},{"size":864,"mtime":1619053701538,"results":"14","hashOfConfig":"10"},{"size":1147,"mtime":1619045215559,"results":"15","hashOfConfig":"10"},{"size":695,"mtime":1619095898395,"results":"16","hashOfConfig":"10"},{"size":483,"mtime":1619053701539,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1456lqr",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/jeffplatt/Flatiron/code/DogGO/doggo-frontend/src/index.js",[],["36","37"],"/Users/jeffplatt/Flatiron/code/DogGO/doggo-frontend/src/reportWebVitals.js",[],"/Users/jeffplatt/Flatiron/code/DogGO/doggo-frontend/src/App.js",[],"/Users/jeffplatt/Flatiron/code/DogGO/doggo-frontend/src/Header.js",[],"/Users/jeffplatt/Flatiron/code/DogGO/doggo-frontend/src/Feed.js",["38"],"import React, { useEffect, useState } from 'react'\nimport PostContainer from './PostContainer'\nimport NewPostForm from './NewPostForm'\n\n\nfunction Feed() {\n    const [posts, setPosts] = useState([])\n\n    useEffect(()=> {\n        fetch(\"http://localhost:3001/posts\")\n            .then(r=>r.json())\n            .then((posts) => {\n                setPosts(posts)\n            })\n    }, [])\n\n    function handleDeletePost(id) {\n        const updatedPostsArray = posts.filter(posts => posts.id !== id)\n        setPosts(updatedPostsArray)\n        \n    }\n    function handleAddPost(newPost) {\n        const updatedPostsArray = [...posts, newPost]\n        setPosts(updatedPostsArray)\n    }\n\n    return (\n        <div>\n        <PostContainer key={posts.id} posts={posts} onDeletePost={handleDeletePost} onAddPost={handleAddPost}/>\n        </div>\n    )\n}\n\nexport default Feed\n","/Users/jeffplatt/Flatiron/code/DogGO/doggo-frontend/src/NewPostForm.js",[],"/Users/jeffplatt/Flatiron/code/DogGO/doggo-frontend/src/PostContainer.js",[],"/Users/jeffplatt/Flatiron/code/DogGO/doggo-frontend/src/OnePost.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":3,"column":8,"nodeType":"45","messageId":"46","endLine":3,"endColumn":19},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'NewPostForm' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]